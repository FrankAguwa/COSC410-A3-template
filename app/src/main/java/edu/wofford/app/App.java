/*
 * This source file was generated by the Gradle 'init' task
 */
package edu.wofford.app;

import java.io.File;
import java.io.IOException;
import java.net.URLDecoder;
import java.io.UnsupportedEncodingException;

import edu.wofford.schedule.*;

public class App {
    
    public enum Result { SUCCESS, INVALID, FULL, OVERLOAD, DUPLICATE, CONFLICT };
    
    public static Result selectCourse(Student student, 
                                      CourseOfferings offerings,
                                      int courseIndex) {
        // TODO
        // Try to add the specified course (by index) to the student's
        // schedule. If successful, increase its enrollment by 1. Return
        // the appropriate result in each case.
        // SUCCESS - no errors
        // INVALID - course index is invalid
        // FULL - course is full
        // OVERLOAD - student schedule is full
        // DUPLICATE - student schedule already contains the course
        // CONFLICT - course conflicts with another on student schedule
        
        return Result.INVALID;
    }

    public static void main(String[] args) {
        // For each index in the set [1, 3, 0, 6, 5, 7, 8, 9, 10, 11, 12]
        //    Display the offerings
        //    Choose the index
        //    Display the result
        //
        // The results should be 
        // FULL, SUCCESS, DUPLICATE, FULL, SUCCESS, CONFLICT, 
        // SUCCESS, SUCCESS, SUCCESS, OVERLOAD, OVERLOAD
        // 
        // The input file with the course offerings is located
        // at the path specified by the first command-line argument.
        int[] courseChoices = {1, 3, 0, 6, 5, 7, 8, 9, 10, 11, 12};
        Student student = new Student();
        CourseOfferings offerings = null;
        if (args.length > 0) {
            offerings = new CourseOfferings(new File(args[0]));
            for (int i = 0; i < courseChoices.length; i++) {
                for (int j = 0; j < offerings.getNumCourses(); j++) {
                    System.out.println(j + ": " + offerings.getCourse(j));
                }
                System.out.println("Choosing " + courseChoices[i] + "...");
                Result res = selectCourse(student, offerings, courseChoices[i]);
                System.out.println(res);
            }
        }
    }
    
}
